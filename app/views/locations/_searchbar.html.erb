<div id="searchbar">
 <div id="searchcontrols">
 
 	<!-- Permalink | Embed -->
  <span class="nowrap" id="rightcontrols">
   <a href="/" id="permalink" onclick="update_url('#permalink'); return false;" title="URL to the current map"><%= I18n.t("locations.searchbar.link", :default => "Link") %></a> |
   <a href="#" id="embedlink" onclick="show_embed_html('#embed'); return false;" title="Embed HTML"><%= I18n.t("locations.searchbar.embed", :default => "Embed") %></a>
   <div id="embed" style="display:none;" title="Embeddable iFrame HTML"></div>
  </span>
  
  <span class="nowrap">  
   <!-- Address -->
   <b><%= I18n.t("locations.searchbar.address", :default => "Address") %></b>
   <input id="address" name="address" placeholder="<%= I18n.t("locations.searchbar.type_and_press_enter", :default => "Type and press Enter") %>" onkeypress="if(event.keyCode == 13){ recenter_map_to_address(); }" size="25" style="margin-right:0;">
    <span id="recenter_button">
    	&middot;
    	<button onclick="recenter_map()" title="<%= I18n.t("locations.searchbar.zoom_to_current_location", :default => "Zoom to current location") %>"><%= I18n.t("locations.searchbar.zoom_to_me", :default => "Zoom to Me") %></button>
    </span>
    &middot; 
  </span>
  
  <!-- Type Filter -->
  <span class="nowrap">
    <b><%= I18n.t("locations.searchbar.filter", :default => "Filter") %></b>
    <%= text_field_tag(:type_filter) %>
    &middot;
  </span>
  
	 <!-- Labels -->
   <span id="hidden_controls" style="display:none;">
     <span class="nowrap">
      <b><%= I18n.t("locations.searchbar.labels", :default => "Labels") %></b>
      <input type="checkbox" id="labels" value="1" onclick="if(!this.checked){ delabelize_markers() }else{ labelize_markers(); } update_permalink();" <%= "checked" if (!@perma.nil? and !@perma[:labels].nil? and @perma[:labels]) %> title="Toggle location labels"> 
      &middot;
     </span>
   </span>

   <!-- Tree inventories -->
   <span class="nowrap">
     <b><%= I18n.t("locations.searchbar.tree_inventories", :default => "Tree inventories") %></b><span class="subtext" style="cursor:help;position:relative;top:-0.5em;" onclick="open_inventories_help_modal();">[?]</span>

     <input type="checkbox" id="muni" value="1" onclick="clear_markers();update_display(true);" <%= "checked" unless (!@perma.nil? and !@perma[:muni].nil? and !@perma[:muni]) or (!@location.nil? and !@location.import.nil? and !@location.import.muni)%> title="Toggle city and campus tree inventories">
   </span>
   <div id="tree_inventories_help" style="display:none;">
     <img src="/paloalto.jpg" style="float:right;margin:0.4em 0 0.5em 1em;" width="200" title="Example tree inventory data for Palo Alto, California">
     <%= I18n.t("locations.searchbar.tree_inventories_modal", :default => "Tree inventories are compiled by institutions seeking to better document and care for their trees. These data are typically collected by trained arborists and are both detailed and exhaustive. We carefully pick out edible species from these inventories and add them to the map for you. You can help us map your neighborhood by asking your city or university if a tree inventory exists and whether  it can be shared with Falling Fruit.") %>
   </div>
   
   <!-- Download -->
   <span id="export_data" style="display: none;">
    &middot;
    <span class="nowrap">
     <a href="#" id="get_data_link" title="Download map as a text file"><%= I18n.t("locations.searchbar.download", :default => "Download") %></a>
    </span>
   </span>
   
 </div>
</div>

<% content_for :page_scripts do %>
<script type="text/javascript">
  var base_type_data = <%= Type.hash_tree((@perma.nil? or @perma[:cats].nil?) ? Type::DefaultCategories : @perma[:cats].split(/,/)).to_json.html_safe %>;
  function filter_by_types_hash(children){
    var mp = markersPartial ? "+" : "";
    var ret = children.filter(function(obj){ return types_hash[obj["id"]] != undefined; })
    for(var i = 0; i < ret.length; i++){
      ret[i]["text"] = ret[i]["name"] + " (" + types_hash[ret[i]["id"]] + mp + ")";
      if(ret[i]["children"] != undefined){
        ret[i]["children"] = filter_by_types_hash(ret[i]["children"])
      }
    }
    return ret;
  }
jQuery(document).ready(function(){
  $('#type_filter').select2({
    <% if @type.nil? %>
    	placeholder: <%= I18n.t("locations.searchbar.select_edible_type", :default => "Select edible type") %>,
    <% else %>
    	placeholder: "<%= @type.full_name %>",
    <% end %>
      data: function(term,page){
          return { text:'text', results: filter_by_types_hash(base_type_data) };
    },
    allowClear: true,
    allowedMethods: ['updateResults']
  });
  $('#s2id_type_filter').select2('disable', true);
  $('#type_filter').on("change",function() {
    $('#type_filter').attr("placeholder", <%= I18n.t("locations.searchbar.select_edible_type", :default => "Select edible type") %>);
    if ($("#type_filter").val() == "") {
      type_filter = undefined;
      if (map.getZoom() <= 12) { // getZoom is critical!
        update_display(true);
      } else {
        clear_type_filter();
      }
    } else {
      type_filter = parseFloat($("#type_filter").val());
      if (map.getZoom() <= 12) {
        update_display(true);
      } else {
        apply_type_filter();
      }
    }
    update_permalink();
  });
});
</script>
<% end %>