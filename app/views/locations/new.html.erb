<div id="editmap_container">
  <div id="map"></div>
  <p id="stamen_attribution" style="display:none;">
    <%= I18n.t("locations.index.stamen_html") %>
  </p>
</div>

<% content_for :page_scripts do %>
<%= render 'map_includes' %>
<script type="text/javascript" charset="utf-8">
  // There are three scenarios here:
  // 1) We are given a lat/lng in the post params (user clicked on the map to add something).
  //    Which we'll know because @location will be a new object with lat/lng set and 
  //    the location_lat and location_lng fields will have stuff in them.
  // 2) We aren't given a lat/lng in the post params, but we're able to use the geolocation
  //    library to guess the user's position. We'll know this because location_lat and location_lng
  //    will be empty and geolocation will succeed.
  // 3) We aren't given a lat/lng and geolocation fails. In this case marker will be left set to null,
  //    and nothing should be placed on the map until the user enters an address or lat/lng

  // ================= globals ==================
	
	var marker = null;
  var type = google.maps.MapTypeId.ROADMAP;
  // Needed for opening marker windows. 
  // FIXME: Shouldn't this be set by the session?
  var cats = undefined;

  // ================= functions =================
  
  function initialize() {
  
    // No user-provided lat/lng
    // (location_lat and location_lng will be empty)
    if ($('#location_lat').val() == "" && $('#location_lng').val() == "") {
      
      // Attempt geolocation
      navigator.geolocation.getCurrentPosition(function(position){
        var lat = position.coords.latitude;
        var lng = position.coords.longitude;
        var zoom = 15;
        basemap(lat,lng,zoom,type);
        place_edit_marker(lat,lng);
      	$('#location_lat').val(lat);
        $('#location_lng').val(lng);
      }, function(error) {
        //use error.code to determine what went wrong
      });

      watchID = navigator.geolocation.watchPosition(function(position) {
        var lat = position.coords.latitude;
        var lng = position.coords.longitude;
        var latlng = new google.maps.LatLng(lat,lng)
        if (marker != null) marker.setPosition(latlng);
				map.panTo(latlng);
        $('#location_lat').val(lat);
        $('#location_lng').val(lng);
      }, function(error) {
        //...
      }, {enableHighAccuracy:true, maximumAge:30000, timeout:30000});
      
      // If geolocation failed, load map without marker
      if ($('#location_lat').val() == "" && $('#location_lng').val() == "") {
      	var lat = 0;
  			var lng = 0;
  			var zoom = 1;
  			basemap(lat,lng,zoom,type);
      }
      
    // User provided lat/lng
    // (location_lat and location_lng will have values)
    } else {
      var lat = $("#location_lat").val();
      var lng = $("#location_lng").val();
      var zoom = 19;
      var type = google.maps.MapTypeId.HYBRID;
      basemap(lat,lng,zoom,type);
      place_edit_marker(lat,lng,watchID)
    }

    // Update markers once we're done panning and zooming
		google.maps.event.addListenerOnce(map, 'idle', function() {
				do_markers(map.getBounds(),null,true);
		});
		
		// Update location markers when bounds change
		google.maps.event.addListener(map, 'bounds_changed', function() {
			google.maps.event.addListenerOnce(map, 'idle', function() {
				var zoom = map.getZoom();
				var bounds = map.getBounds();
				if (prior_bounds == null && prior_zoom == null) {
					prior_zoom = zoom;
					prior_bounds = bounds;
					return;
				}
				if (zoom > 12 && prior_bounds != bounds) {
					do_markers(bounds,null,true);
				}
				prior_zoom = zoom;
				prior_bounds = bounds;
			});
		});
	}

  // ================== main-level code ===================

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
<%= javascript_include_tag "maplabel" %>
<%= javascript_include_tag "progressBar" %>
<%= javascript_include_tag "richmarker" %>
<%= javascript_include_tag "mapcommon" %>
<% end %>

<%= render 'form' %>
